# https://www.quora.com/How-do-I-create-a-real-time-plot-with-matplotlib-and-Tkinterimport tkinter as tkfrom random import randintimport numpy as npimport pyaudio# these two imports are importantfrom matplotlib.backends.backend_tkagg import FigureCanvasTkAggfrom matplotlib.figure import Figureimport timeimport threadingimport recording as rccontinuePlotting = FalseCHUNK = 2**11RATE = 44100def reader(stream,CHUNK):    data = np.fromstring(stream.read(CHUNK),dtype=np.int16)    peak=np.average(np.abs(data))*2    return datadef change_state():    global continuePlotting    if continuePlotting == True:        continuePlotting = False    else:        continuePlotting = Truedef data_initialize():    f = open("data.txt","w")    for i in range(10):        f.write(str(randint(0,10))+'\n')    f.close()def data_points():    f = open("data.txt", "a")    # for i in range(10):    # peak = reader(stream)    # f.write(str(peak + '\n'))    f.write(str(randint(0, 10)) + '\n')    f.close()    f = open("data.txt", "r")    data = f.readlines()    f.close()    l = []    tail = len(data)    for i in range(tail-10,tail):        l.append(int(data[i].rstrip("\n")))    return ldef app():    # initialise a window.    root = tk.Tk()    root.config(background='white')    root.geometry("500x500")    lab = tk.Label(root, text="Live Plotting", bg='white').pack()    fig = Figure(figsize=(5, 4))    ax = fig.add_subplot(111)    ax.set_xlabel("X axis")    ax.set_ylabel("Y axis")    ax.grid()    graph = FigureCanvasTkAgg(fig, master=root)    graph.get_tk_widget().pack(side="top", fill='both', expand=True)    # root.mainloop()    return ax,graphdef plotter(ax,graph,dpts):    # data_initialize()    # while continuePlotting:    ax.cla()    # ax.grid()    # ax.set_xlim(-30,30)    # ax.set_ylim()    # dpts = reader(stream,CHUNK)    # ear.tape_add()    # dpts = ear.tape    # dpts = data_points() # update data    # ax.scatter(np.arange(len(ear.tape)), ear.tape, marker='o', c=range(10),cmap='Blues')    ax.plot(np.arange(len(dpts)),dpts)    graph.draw()    time.sleep(1)    #    # def gui_handler():    #     change_state()    #     threading.Thread(target=plotter).start()    # b = tk.Button(root, text="Start/Stop", command=gui_handler, bg="red", fg="white")    # b.pack(side="bottom")if __name__=="__main__":    # p = pyaudio.PyAudio()    # stream = p.open(format=pyaudio.paInt16, channels=1, rate=RATE, input=True,    #                 frames_per_buffer=CHUNK)    ax, graph = app()    for i in range(int(10 * 44100 / 1024)):        # dpts = np.fromstring(stream.read(CHUNK),dtype=np.int16)        dpts = [1,2,3,4,5,6,7,8,9,10]        plotter(ax,graph,dpts)    # stream.stop_stream()    # stream.close()    # p.terminate()